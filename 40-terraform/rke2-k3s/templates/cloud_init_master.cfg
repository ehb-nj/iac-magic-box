#cloud-config
# Hostname
hostname: ${HOSTNAME}

# System Update
package_update: true
package_upgrade: true

# Users
users:
  - default
  - name: ${USERNAME}
    gecos: ${USERNAME}
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: users, admin
    lock_passwd: false
    shell: /bin/bash
    ssh_authorized_keys:
      - ${SSH_KEY}

# Configuration file
%{ if KUBERNETES_DISTRIB == "rke2" }
  %{ if KUBERNETES_MASTER_ACTUAL != "0" }

write_files:
  - content: |
      server: https://${KUBERNETES_MASTER_JOIN_IP}:9345
      token: ${KUBERNETES_JOIN_TOKEN}
      write-kubeconfig-mode: "0644"
    path: /etc/rancher/rke2/config.yaml

  %{ else }

write_files:
  - content: |
      token: ${KUBERNETES_JOIN_TOKEN}
      write-kubeconfig-mode: "0644"
    path: /etc/rancher/rke2/config.yaml
 
  %{ endif }
%{ endif }

# Packages
packages:
  - vim
  - iptables
  - qemu-guest-agent



# Installation RKE2/K3S
runcmd:
  - systemctl start qemu-guest-agent.service
%{ if KUBERNETES_DISTRIB == "rke2" }
  - if [ ! -d "/var/lib/rancher/rke2/" ]; then
  - curl -sfL https://get.rke2.io | sh -
  - systemctl enable rke2-server.service
  - systemctl start rke2-server.service
%{ else }
  - if [ ! -d "/var/lib/rancher/k3s/" ]; then
  %{ if KUBERNETES_MASTER_ACTUAL != "0" }
  - curl -fL https://get.k3s.io | sh -s - server --cluster-init --token "${KUBERNETES_JOIN_TOKEN}" --server "https://${KUBERNETES_MASTER_JOIN_IP}:6443"
  %{ else }
  - curl -fL https://get.k3s.io | sh -s - server --cluster-init --token "${KUBERNETES_JOIN_TOKEN}"
  %{ endif }
%{ endif }
  - sleep 20
  - fi


# Final message
final_message: "Kubernetes server installed and ready"
